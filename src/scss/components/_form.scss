.feedback {
  display: flex;
  flex-direction: column;
  row-gap: setSize(30);

  .button__container {
    display: flex;
    gap: setSize(16);
    align-items: flex-start;
    flex-direction: column-reverse;
    p {
      a {
        display: inline;
        @apply transition-colors;
        &:hover {
          @apply text-white-100;
        }
      }
    }

    .button {
      width: 100%;
    }
  }
}

.input {
  --plusheight: 1.35em;
  display: flex;
  flex-direction: column;
  padding-top: setSize(22);
  position: relative;
  cursor: default;

  textarea {
    height: calc(#{setSize(5.5)} + var(--plusheight));
  }

  input,
  textarea {
    padding-bottom: setSize(5.5);

    transition: border-color var(--transition);
  }

  &__title {
    margin-bottom: 4px;
    transition: font-size var(--transition), color var(--transition),
      top var(--transition);
    position: absolute;
    top: setSize(22);
    left: 0;
    cursor: text;
    @apply text-15;
    span {
      @apply text-black-20;
    }
  }

  &.active {
    .input__title {
      top: 0;
      cursor: default;
      @apply text-20 text-black-20;
    }
  }

  &.error {
    .input__title {
      @apply text-red-100;
    }

    .text-error {
      @apply text-20 sm:text-11;
    }
  }
}

.custom-select {
  position: relative;
}

.custom-select select {
  display: none;
}

.select-selected {
  width: 100%;
  height: calc(1.35em + (var(--scale-rem) * 0.95));
  padding-bottom: calc(var(--scale-rem) * 0.95);
  border-bottom: 1px solid var(--black20);
  transition: border-color var(--transition);
}

.select-selected::before {
  position: absolute;
  font-family: "icomoon" !important;
  speak: never;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  font-size: clamp(6px, var(--scale-rem) * 2.4, 16px);
  display: flex;
  align-items: center;
  justify-content: center;
  -webkit-font-smoothing: antialiased;
  color: var(--black100);
  right: 0;
  top: 50%;
  transform: translateY(-50%);
}

.select-selected.select-arrow-active:before {
  transform: translateY(-50%) rotate(180deg);
}

.select-selected {
  cursor: pointer;
}

.select-items {
  overflow: hidden;
  position: absolute;
  background-color: var(--white100);
  box-shadow: 0px 16px 24px 0px rgba(22, 22, 22, 0.06);
  top: calc(100% + #{setSize(10)});
  left: 0;
  right: 0;
  z-index: 99;
  border-radius: 8px;
  padding: setSize(20) 0;

  &__wrapper {
    position: relative;
    padding: 0 setSize(6);
    --h: auto;
    --top: 0;
    &::before {
      content: "";
      left: 0;
      right: 0;
      opacity: 0;
      position: absolute;
      top: var(--top);
      height: var(--h);
      z-index: -1;
      background-color: var(--black10);
      transition: opacity var(--transition);
    }

    &.show-back {
      &::before {
        opacity: 1;
      }
    }
  }

  &__container {
    max-height: 220px;
    overflow: auto;
    & > div {
      cursor: pointer;
      padding: setSize(11.5) setSize(14);
      position: relative;
      color: var(--black60);

      &::after {
        content: "";
        left: setSize(14);
        right: setSize(14);
        position: absolute;

        width: auto;
        bottom: 0;
        height: 1px;
        border-radius: 100%;
        background-color: var(--black20);
      }
    }
  }
}

textarea {
  overflow: hidden;
  overflow-wrap: break-word;
  resize: none;
}

textarea,
pre {
  -moz-tab-size: 0;
  -o-tab-size: 0;
  -webkit-tab-size: 0;
  tab-size: 0;
}

.select-hide {
  display: none;
}

.checkbox {
  @apply relative h-24 w-24;

  min-width: calc(var(--scale-rem) * 2.4);

  &__item {
    &::before,
    &::after {
      overflow: hidden;
      @apply absolute;
      border-radius: 2px;
    }

    &::before {
      content: "";
      @apply border-2 border-black-60  inset-3;
      transition: border-color var(--transition);
    }

    &::after {
      @apply inset-0 hidden  bg-contain bg-center;
      content: "";
    }
  }

  &:hover {
    .checkbox__item {
      &::before {
        @apply border-black-20;
      }
    }
  }

  input {
    visibility: hidden;

    &:checked + .checkbox__item {
      &::before {
        @apply hidden;
      }

      &::after {
        @apply block;
      }
    }
  }
}

@screen sm {
  .feedback {
    row-gap: setSize(50);

    #connect & {
      row-gap: setSize(43);
    }

    .button__container {
      flex-direction: row;
      gap: setSize(24);
      p {
        max-width: 263px;
      }

      .button {
        width: fit-content;
      }
    }
  }

  .input {
    &__title {
      @apply text-7;
    }

    &.active {
      .input__title {
        @apply text-11;
      }
    }
  }
}
